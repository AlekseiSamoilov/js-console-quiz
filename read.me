# JS Quiz Backend

TypeScript backend –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JavaScript –∫–æ–¥-–∫–≤–∏–∑–æ–≤.

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
npm install
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```bash
cp .env.example .env
# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
```

### –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
npm run dev
```

### –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
```bash
npm run build
npm start
```

## üì° API Endpoints

### GET /api/health
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API
```json
{
  "success": true,
  "message": "API is working",
  "timestamp": "2024-01-01T00:00:00.000Z"
}
```

### GET /api/difficulties
–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
```json
{
  "success": true,
  "difficulties": [
    {
      "name": "easy",
      "blockCount": { "min": 2, "max": 3 },
      "types": ["variables", "reassignments"]
    }
  ]
}
```

### GET /api/task/:difficulty
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
- `difficulty` - —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (`easy`, `medium`, `hard`)

**–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**
```json
{
  "success": true,
  "task": {
    "id": "abc123",
    "difficulty": "easy",
    "code": "let a = 5;\nconsole.log(a);\n\na = 7;\nconsole.log(a);",
    "expectedOutput": ["5", "7"],
    "blocks": [...]
  }
}
```

## üèóÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
src/
‚îú‚îÄ‚îÄ data/
‚îÇ   ‚îî‚îÄ‚îÄ blocks.ts          # –î–∞–Ω–Ω—ã–µ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
‚îú‚îÄ‚îÄ routes/
‚îÇ   ‚îî‚îÄ‚îÄ api.ts             # API —Ä–æ—É—Ç—ã
‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îî‚îÄ‚îÄ TaskGenerator.ts   # –õ–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á
‚îú‚îÄ‚îÄ types/
‚îÇ   ‚îî‚îÄ‚îÄ index.ts          # TypeScript —Ç–∏–ø—ã
‚îî‚îÄ‚îÄ server.ts             # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞
```

## üîß –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

### Railway
1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ [Railway](https://railway.app)
2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
3. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
   ```
   NODE_ENV=production
   CORS_ORIGIN=https://your-frontend.com
   ```

### Render
1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ [Render](https://render.com)
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service
3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Build Command: `npm run build`
5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Start Command: `npm start`

### Vercel (Serverless)
–î–ª—è Vercel –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ serverless —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –ø–∞–ø–∫–µ `/api`.

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
curl http://localhost:5000/api/health

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–µ–≥–∫–æ–π –∑–∞–¥–∞—á–∏
curl http://localhost:5000/api/task/easy

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
curl http://localhost:5000/api/difficulties
```

## üì¶ Scripts

- `npm run dev` - –∑–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å hot reload
- `npm run build` - —Å–±–æ—Ä–∫–∞ TypeScript –≤ JavaScript
- `npm start` - –∑–∞–ø—É—Å–∫ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- `npm run type-check` - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –±–µ–∑ —Å–±–æ—Ä–∫–∏